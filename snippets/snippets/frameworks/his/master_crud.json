{
  "Extjs master crud": {
    "prefix": "ext-master-crud",
    "body": [
      "Ext.onReady(async function () {",
      "  const today = new Date();",
      "",
      "  async function ${1:prefixName}Save() {",
      "    try {",
      "      const formValues = ${1:prefixName}Form.getForm().getFieldValues();",
      "      if (!${1:prefixName}Form.getForm().isValid()) {",
      "        throw FAILED_VALID_FORM;",
      "      }",
      "      formValues.active = parseInt(formValues.active.inputValue);",
      "",
      "      let req = Array();",
      "      req = [...req, formValues];",
      "",
      "      const data = Ext.encode(req);",
      "      let endPoint = baseUrl + \"${2:endpoint}/insert\";",
      "      let result = await httpRequest(endPoint, \"POST\", data);",
      "",
      "      successSaveDialog(result.statusCode);",
      "      ${1:prefixName}ResetForm();",
      "      ${1:prefixName}Form.toggleCollapse();",
      "      ${1:prefixName}Grid.toggleCollapse();",
      "    } catch (error) {",
      "      catchDialog(error);",
      "    }",
      "  }",
      "",
      "  function ${1:prefixName}ShowFormWindow() {",
      "    if (${1:prefixName}Form.collapsed) {",
      "      ${1:prefixName}ResetForm();",
      "      ${1:prefixName}Form.toggleCollapse();",
      "      ${1:prefixName}Grid.toggleCollapse();",
      "    }",
      "    Ext.MessageBox.hide();",
      "  }",
      "",
      "  async function ${1:prefixName}SetForm() {",
      "    try {",
      "      let param = {",
      "        per_page: -1,",
      "      };",
      "",
      "      const record = ${1:prefixName}Grid.getSelectionModel().getSelected();",
      "",
      "      ${1:prefixName}Form.getForm().loadRecord(record);",
      "      ${1:prefixName}ActiveField.setValue(\"active-0\", true);",
      "      if (record.get(\"active\")) {",
      "        ${1:prefixName}ActiveField.setValue(\"active-1\", true);",
      "      }",
      "",
      "      Ext.MessageBox.hide();",
      "    } catch (error) {",
      "      catchDialog(error);",
      "    }",
      "  }",
      "",
      "  function ${1:prefixName}ConfirmUpdate() {",
      "    if (${1:prefixName}Grid.selModel.getCount() == 1) {",
      "      ${1:prefixName}SetForm();",
      "      ${1:prefixName}Form.toggleCollapse();",
      "      ${1:prefixName}Grid.toggleCollapse();",
      "    } else {",
      "      showNoUpdateDialog();",
      "    }",
      "  }",
      "  async function ${1:prefixName}ResetForm() {",
      "    ${1:prefixName}CodeField.setValue(\"\");",
      "    ${1:prefixName}NameField.setValue(\"\");",
      "    ${1:prefixName}DescriptionField.setValue(\"\");",
      "    ${1:prefixName}DescriptionEnField.setValue(\"\");",
      "    ${1:prefixName}Store.reload();",
      "    ${1:prefixName}BtnSave.show();",
      "  }",
      "",
      "  function ${1:prefixName}ConfirmDelete() {",
      "    if (${1:prefixName}Grid.selModel.getCount() == 1) {",
      "      Ext.MessageBox.confirm(\"Confirmation\", CONFIRM_DELETE, ${1:prefixName}Delete);",
      "    } else if (${1:prefixName}Grid.selModel.getCount() > 1) {",
      "      Ext.MessageBox.confirm(\"Confirmation\", CONFIRM_MULTI_DELETE, ${1:prefixName}Delete);",
      "    } else {",
      "      showNoDeleteDialog();",
      "    }",
      "  }",
      "  async function ${1:prefixName}Delete(btn) {",
      "    try {",
      "      if (btn == \"yes\") {",
      "        const selections = ${1:prefixName}Grid.selModel.getSelections();",
      "        let ids = selections.map((u) => {",
      "          return { id: u.get(\"id\") };",
      "        });",
      "",
      "        ids = Ext.encode(ids);",
      "        let endPoint = baseUrl + \"${2:endpoint}/delete\";",
      "        let result = await httpRequest(endPoint, \"DELETE\", ids);",
      "        successSaveDialog(result.statusCode, SUCCESS_DELETE);",
      "        ${1:prefixName}ResetForm();",
      "      }",
      "    } catch (error) {",
      "      catchDialog(error);",
      "    }",
      "  }",
      "",
      "  /* Start Form*/",
      "  const ${1:prefixName}CodeField = new Ext.form.TextField({",
      "    name: \"code\",",
      "    readOnly: true,",
      "    fieldLabel: \"Code <font color=red>*</font>\",",
      "    cls: \"form-textfield\",",
      "    anchor: \"98%\",",
      "    allowBlank: true,",
      "  });",
      "  const ${1:prefixName}NameField = new Ext.form.TextField({",
      "    name: \"name\",",
      "    fieldLabel: \"Name <font color=red>*</font>\",",
      "    cls: \"form-textfield\",",
      "    anchor: \"98%\",",
      "    allowBlank: false,",
      "  });",
      "  const ${1:prefixName}DescriptionField = new Ext.form.TextArea({",
      "    allowBlank: true,",
      "    name: \"description\",",
      "    fieldLabel: \"Description\",",
      "    anchor: \"98%\",",
      "    height: 50,",
      "  });",
      "  const ${1:prefixName}DescriptionEnField = new Ext.form.TextArea({",
      "    allowBlank: true,",
      "    name: \"description_en\",",
      "    fieldLabel: \"Description (English)\",",
      "    anchor: \"98%\",",
      "    height: 50,",
      "  });",
      "",
      "  const ${1:prefixName}ActiveField = new Ext.form.RadioGroup({",
      "    name: \"active\",",
      "    fieldLabel: \"Active\",",
      "    anchor: \"75%\",",
      "    items: [",
      "      {",
      "        boxLabel: \"Yes\",",
      "        inputValue: \"1\",",
      "        id: \"active-1\",",
      "        name: \"active\",",
      "        checked: true,",
      "      },",
      "      {",
      "        boxLabel: \"No\",",
      "        inputValue: \"0\",",
      "        id: \"active-0\",",
      "        name: \"active\",",
      "      },",
      "    ],",
      "  });",
      "",
      "  const ${1:prefixName}Fieldset = new Ext.form.FieldSet({",
      "    style: \"vertical-align:middle;border-radius:4px;\",",
      "    layout: \"form\",",
      "    border: false,",
      "    frame: false,",
      "    cls: \"bordered\",",
      "    items: [",
      "      {",
      "        layout: \"column\",",
      "        frame: false,",
      "        title: false,",
      "        border: false,",
      "        items: [",
      "          {",
      "            layout: \"form\",",
      "            bodyCssClass: \"line-sparator-field-right\",",
      "            columnWidth: 1 / 2,",
      "            border: false,",
      "            items: [",
      "              ${1:prefixName}CodeField,",
      "              ${1:prefixName}NameField,",
      "              ${1:prefixName}DescriptionField,",
      "              ${1:prefixName}DescriptionEnField,",
      "            ],",
      "          },",
      "          {",
      "            layout: \"form\",",
      "            bodyStyle: \"padding-left: 10px;\",",
      "            columnWidth: 1 / 2,",
      "            items: [",
      "              ${1:prefixName}ActiveField,",
      "            ],",
      "          },",
      "        ],",
      "      },",
      "    ],",
      "  });",
      "",
      "  const ${1:prefixName}BtnSave = new BtnDarkBlue({",
      "    text: BTN_SAVE,",
      "    iconCls: \"icon-save\",",
      "    handler: ${1:prefixName}Save,",
      "  });",
      "",
      "  const ${1:prefixName}Form = new Ext.FormPanel({",
      "    layout: \"form\",",
      "    id: \"${1:prefixName}Form\",",
      "    title: \"${3:title} \" + TITLE_FORM,",
      "    cls: \"table-bordered\",",
      "    frame: true,",
      "    border: false,",
      "    autoHeight: true,",
      "    collapsed: true,",
      "    hideCollapseTool: true,",
      "    items: [${1:prefixName}Fieldset],",
      "    buttons: [",
      "      new BtnOutlineRed({",
      "        text: BTN_CANCEL,",
      "        iconCls: \"icon-close\",",
      "        handler: function () {",
      "          ${1:prefixName}ResetForm();",
      "          ${1:prefixName}Form.toggleCollapse();",
      "          ${1:prefixName}Grid.toggleCollapse();",
      "        },",
      "      }),",
      "      ${1:prefixName}BtnSave,",
      "    ],",
      "  });",
      "",
      "  /* End Form*/",
      "  /* Start Grid*/",
      "  const ${1:prefixName}Store = new Ext.data.Store({",
      "    proxy: new Ext.data.HttpProxy({",
      "      url: baseUrl + \"${2:endpoint}/get\",",
      "      method: \"GET\",",
      "    }),",
      "    paramNames: {",
      "      start: \"offset\",",
      "      limit: \"per_page\",",
      "    },",
      "    reader: new Ext.data.JsonReader(",
      "      {",
      "        root: \"results\",",
      "        totalProperty: \"total\",",
      "        id: \"id\",",
      "      },",
      "      [",
      "        {",
      "          name: \"id\",",
      "          type: \"int\",",
      "          mapping: \"id\",",
      "        },",
      "        {",
      "          name: \"code\",",
      "          type: \"string\",",
      "          mapping: \"code\",",
      "        },",
      "        {",
      "          name: \"name\",",
      "          type: \"string\",",
      "          mapping: \"name\",",
      "        },",
      "        {",
      "          name: \"description\",",
      "          type: \"string\",",
      "          mapping: \"description\",",
      "        },",
      "        {",
      "          name: \"description_en\",",
      "          type: \"string\",",
      "          mapping: \"description_en\",",
      "        },",
      "        {",
      "          name: \"active\",",
      "          type: \"bool\",",
      "          mapping: \"active\",",
      "        },",
      "      ]",
      "    ),",
      "    autoLoad: true,",
      "  });",
      "  const ${1:prefixName}ColumnModel = new Ext.grid.ColumnModel([",
      "    {",
      "      header: \"Action\",",
      "      xtype: \"actioncolumn\",",
      "      width: 15,",
      "      align: \"center\",",
      "      items: [",
      "        {",
      "          getClass: function (v, meta, rec) {",
      "            this.items[0].tooltip = \"Edit\";",
      "            return \"x-icon-edit\";",
      "          },",
      "          handler: function (grid, rowIndex, colIndex) {",
      "            grid.getSelectionModel().selectRow(rowIndex);",
      "            ${1:prefixName}ConfirmUpdate();",
      "          },",
      "        },",
      "        {",
      "          getClass: function (v, meta, rec) {",
      "            this.items[1].tooltip = \"Delete\";",
      "            return \"x-icon-delete\";",
      "          },",
      "          handler: function (grid, rowIndex, colIndex) {",
      "            grid.getSelectionModel().selectRow(rowIndex);",
      "            ${1:prefixName}ConfirmDelete();",
      "          },",
      "        },",
      "      ],",
      "    },",
      "    {",
      "      header: \"Code\",",
      "      dataIndex: \"code\",",
      "      width: 50,",
      "      sortable: true,",
      "      hidden: false,",
      "    },",
      "    {",
      "      header: \"Name\",",
      "      dataIndex: \"name\",",
      "      width: 30,",
      "      sortable: true,",
      "      hidden: false,",
      "    },",
      "    {",
      "      header: \"Description Eng\",",
      "      dataIndex: \"description_en\",",
      "      width: 50,",
      "      sortable: true,",
      "      hidden: false,",
      "    },",
      "    {",
      "      header: \"Active\",",
      "      dataIndex: \"active\",",
      "      width: 10,",
      "      sortable: true,",
      "      hidden: false,",
      "      align: \"center\",",
      "      renderer: function (v) {",
      "        return v ? \"Y\" : \"N\";",
      "      },",
      "    },",
      "  ]);",
      "  const ${1:prefixName}GridBtnAdd = new BtnOutlineDarkBlue({",
      "    text: BTN_ADD_TITLE,",
      "    tooltip: BTN_ADD_TOOLTIP,",
      "    iconCls: \"icon-adds\",",
      "    handler: ${1:prefixName}ShowFormWindow,",
      "  });",
      "  const ${1:prefixName}Search = new Ext.app.SearchField({",
      "    cls: \"search-field\",",
      "    store: ${1:prefixName}Store,",
      "    listeners: {",
      "      specialkey: function (f, e) {",
      "        if (e.getKey() == e.ENTER) {",
      "          ${1:prefixName}Store.baseParams = {",
      "            offset: 0,",
      "            per_page: pageS,",
      "          };",
      "        }",
      "      },",
      "      render: function () {",
      "        Ext.get(this.id).set({ qtitle: BTN_SIMPLE_SEARCH_TOOLTIP });",
      "      },",
      "    },",
      "    width: 160,",
      "    emptyText: \"Name / Code\",",
      "  });",
      "  const ${1:prefixName}Grid = new Ext.grid.EditorGridPanel({",
      "    title: \"${3:title} \" + TITLE_LIST,",
      "    loadMask: WAIT_MESSAGE,",
      "    store: ${1:prefixName}Store,",
      "    cm: ${1:prefixName}ColumnModel,",
      "    anchor: \"100%\",",
      "    enableColLock: false,",
      "    frame: true,",
      "    autoHeight: true,",
      "    cls: \"table-bordered\",",
      "    border: false,",
      "    collapsed: false,",
      "    hideCollapseTool: true,",
      "    selModel: new Ext.grid.RowSelectionModel({ singleSelect: true }),",
      "    viewConfig: {",
      "      forceFit: true,",
      "    },",
      "    bbar: [",
      "      {",
      "        text: BTN_INFO_TITLE,",
      "        tooltip: BTN_INFO_TOOLTIP,",
      "        iconCls: \"icon-info\",",
      "        style: {",
      "          \"border-radius\": \"4px\",",
      "          border: \"1px solid #1c77ff\",",
      "        },",
      "        hidden: init_info,",
      "        handler: function () {",
      "          window.open(linkKnowledgebase + linkHelp);",
      "        },",
      "      },",
      "      \"->\",",
      "      \"->\",",
      "      new Ext.PagingToolbar({",
      "        pageSize: pageS,",
      "        store: ${1:prefixName}Store,",
      "        displayInfo: true,",
      "      }),",
      "    ],",
      "    tbar: [",
      "      ${1:prefixName}GridBtnAdd,",
      "      \"->\",",
      "      ${1:prefixName}Search,",
      "      new BtnOutlineDarkBlue({",
      "        text: BTN_REFRESH_TITLE,",
      "        tooltip: BTN_REFERSH_TOOLTIP,",
      "        iconCls: \"icon-refresh\",",
      "        handler: function () {",
      "          ${1:prefixName}Search.setValue(null);",
      "          ${1:prefixName}Search.onTrigger2Click();",
      "        },",
      "      }),",
      "      \" \",",
      "    ],",
      "    listeners: {",
      "      dblclick: function () {",
      "        ${1:prefixName}ConfirmUpdate();",
      "      },",
      "    },",
      "  });",
      "  /*Endi Grid */",
      "  const ${1:prefixName}MainPanel = new Ext.Panel({",
      "    region: \"center\",",
      "    fill: true,",
      "    bodyStyle: \"overflow-y: scroll\",",
      "    bodyBorder: false,",
      "    items: [${1:prefixName}Form, ${1:prefixName}Grid],",
      "  });",
      "",
      "  const ${1:prefixName}MainContent = new Ext.Panel({",
      "    style: \"width:100%;background-color:white;\",",
      "    layout: \"border\",",
      "    items: [${1:prefixName}MainPanel],",
      "  });",
      "",
      "  const container = Ext.getCmp(${1:prefixName}TabPanelAttachID);",
      "  container.add(${1:prefixName}MainContent);",
      "  container.doLayout();",
      "});",
      ""
    ],
    "description": "Extjs master crud"
  }
}
